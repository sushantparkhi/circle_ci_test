version: '1.0'
stages:
  - prepare
  - test
  - build
steps:
  GetGithubToken:
    title: Reading Github token
    image: codefresh/cli
    stage: prepare
    commands:
      - cf_export GITHUB_TOKEN=$(codefresh get context github --decrypt -o yaml | yq -y .spec.data.auth.password)

  SetStatusToPrepareToPending:
    title: Set Prepare Stage to Pending
    image: cloudposse/github-status-updater
    stage: prepare
    environment:
      - GITHUB_ACTION=update_state
      - GITHUB_TOKEN=${{GITHUB_TOKEN}}
      - GITHUB_OWNER=${{CF_REPO_OWNER}}
      - GITHUB_REPO=${{CF_REPO_NAME}}
      - GITHUB_REF=${{CF_REVISION}}
      - GITHUB_CONTEXT=Prepare
      - GITHUB_STATE=pending
      - GITHUB_DESCRIPTION=Executing Prepare Stage
      - GITHUB_TARGET_URL=${{CF_BUILD_URL}}
  CloneRepo:
    title: Cloning Repository
    type: git-clone
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_REVISION}}'
    stage: prepare
    git: github
  SetStatusToPrepareToDone:
    title: Set Prepare Stage to Done
    image: cloudposse/github-status-updater
    stage: prepare
    environment:
      - GITHUB_ACTION=update_state
      - GITHUB_TOKEN=${{GITHUB_TOKEN}}
      - GITHUB_OWNER=${{CF_REPO_OWNER}}
      - GITHUB_REPO=${{CF_REPO_NAME}}
      - GITHUB_REF=${{CF_REVISION}}
      - GITHUB_CONTEXT=Prepare
      - GITHUB_STATE=success
      - GITHUB_DESCRIPTION=Prepare Stage Successful
      - GITHUB_TARGET_URL=${{CF_BUILD_URL}}
    when:
      condition:
        all:
          successCondition: steps.CloneRepo.result == 'success'

  SetStatusToPrepareToError:
    title: Set Prepare Stage to Error
    image: cloudposse/github-status-updater
    stage: prepare
    environment:
      - GITHUB_ACTION=update_state
      - GITHUB_TOKEN=${{GITHUB_TOKEN}}
      - GITHUB_OWNER=${{CF_REPO_OWNER}}
      - GITHUB_REPO=${{CF_REPO_NAME}}
      - GITHUB_REF=${{CF_REVISION}}
      - GITHUB_CONTEXT=Prepare
      - GITHUB_STATE=failure
      - GITHUB_DESCRIPTION=Prepare Stage Failed
      - GITHUB_TARGET_URL=${{CF_BUILD_URL}}
    when:
      condition:
        any:
          errorCondition: steps.CloneRepo.result == 'error'
          failureCondition: steps.CloneRepo.result == 'failure'

  SetStatusToTestToPending:
    title: Set Test Stage to Pending
    image: cloudposse/github-status-updater
    stage: test
    environment:
      - GITHUB_ACTION=update_state
      - GITHUB_TOKEN=${{GITHUB_TOKEN}}
      - GITHUB_OWNER=${{CF_REPO_OWNER}}
      - GITHUB_REPO=${{CF_REPO_NAME}}
      - GITHUB_REF=${{CF_REVISION}}
      - GITHUB_CONTEXT=Test
      - GITHUB_STATE=pending
      - GITHUB_DESCRIPTION=Executing Test Stage
      - GITHUB_TARGET_URL=${{CF_BUILD_URL}}

  ExecuteUnitTest:
    title: Unit test
    stage: test
    working_directory: '${{CF_VOLUME_PATH}}/${{CF_REPO_NAME}}'
    image: 'maven:3.6.1-jdk-11-slim'
    commands:
      - mvn -Dmaven.repo.local='${{CF_VOLUME_PATH}}/m2_repository' test

  SetStatusToTestToDone:
    title: Set Test Stage to Done
    image: cloudposse/github-status-updater
    stage: test
    environment:
      - GITHUB_ACTION=update_state
      - GITHUB_TOKEN=${{GITHUB_TOKEN}}
      - GITHUB_OWNER=${{CF_REPO_OWNER}}
      - GITHUB_REPO=${{CF_REPO_NAME}}
      - GITHUB_REF=${{CF_REVISION}}
      - GITHUB_CONTEXT=Test
      - GITHUB_STATE=success
      - GITHUB_DESCRIPTION=Test Stage Successful
      - GITHUB_TARGET_URL=${{CF_BUILD_URL}}
    when:
      condition:
        all:
          successCondition: steps.ExecuteUnitTest.result == 'success'

  SetStatusToTestToError:
    title: Set Test Stage to Error
    image: cloudposse/github-status-updater
    stage: test
    environment:
      - GITHUB_ACTION=update_state
      - GITHUB_TOKEN=${{GITHUB_TOKEN}}
      - GITHUB_OWNER=${{CF_REPO_OWNER}}
      - GITHUB_REPO=${{CF_REPO_NAME}}
      - GITHUB_REF=${{CF_REVISION}}
      - GITHUB_CONTEXT=Test
      - GITHUB_STATE=failure
      - GITHUB_DESCRIPTION=Test Stage Failed
      - GITHUB_TARGET_URL=${{CF_BUILD_URL}}
    when:
      condition:
        any:
          errorCondition: steps.ExecuteUnitTest.result == 'error'
          failureCondition: steps.ExecuteUnitTest.result == 'failure'
  SetStatusToBuildToPending:
    title: Set Build Stage to Pending
    image: cloudposse/github-status-updater
    stage: build
    environment:
      - GITHUB_ACTION=update_state
      - GITHUB_TOKEN=${{GITHUB_TOKEN}}
      - GITHUB_OWNER=${{CF_REPO_OWNER}}
      - GITHUB_REPO=${{CF_REPO_NAME}}
      - GITHUB_REF=${{CF_REVISION}}
      - GITHUB_CONTEXT=Build
      - GITHUB_STATE=pending
      - GITHUB_DESCRIPTION=Executing Build Stage
      - GITHUB_TARGET_URL=${{CF_BUILD_URL}}
  BuildJar:
    title: Build Executable
    stage: build
    working_directory: './${{CF_REPO_NAME}}'
    image: 'maven:3.6.1-jdk-11-slim'
    commands:
      - mvn -Dmaven.repo.local='${{CF_VOLUME_PATH}}/m2_repository' package -Dmaven.test.skip=true
  BuildDockerImage:
    title: Building Docker Image
    type: build
    stage: build
    image_name: circleci-test
    working_directory: '${{CF_VOLUME_PATH}}/${{CF_REPO_NAME}}'
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}'
    dockerfile: docker/Dockerfile
  PushDockerImage:
    stage: build
    type: push
    title: Pushing to Docker Hub
    candidate: ${{BuildDockerImage}}
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}'
    registry: dockerhub
    image_name: sushantparkhi/circleci-test
  SetStatusToBuildToDone:
    title: Set Build Stage to Done
    image: cloudposse/github-status-updater
    stage: build
    environment:
      - GITHUB_ACTION=update_state
      - GITHUB_TOKEN=${{GITHUB_TOKEN}}
      - GITHUB_OWNER=${{CF_REPO_OWNER}}
      - GITHUB_REPO=${{CF_REPO_NAME}}
      - GITHUB_REF=${{CF_REVISION}}
      - GITHUB_CONTEXT=Build
      - GITHUB_STATE=success
      - GITHUB_DESCRIPTION=Build Stage Successful
      - GITHUB_TARGET_URL=${{CF_BUILD_URL}}
    when:
      condition:
        all:
          successCondition: steps.PushDockerImage.result == 'success'
  SetStatusToBuildToError:
    title: Set Build Stage to Error
    image: cloudposse/github-status-updater
    stage: build
    environment:
      - GITHUB_ACTION=update_state
      - GITHUB_TOKEN=${{GITHUB_TOKEN}}
      - GITHUB_OWNER=${{CF_REPO_OWNER}}
      - GITHUB_REPO=${{CF_REPO_NAME}}
      - GITHUB_REF=${{CF_REVISION}}
      - GITHUB_CONTEXT=Build
      - GITHUB_STATE=failure
      - GITHUB_DESCRIPTION=Build Stage Failed
      - GITHUB_TARGET_URL=${{CF_BUILD_URL}}
    when:
      condition:
        any:
          buildErrorCondition: steps.BuildJar.result == 'error'
          buildFailureCondition: steps.BuildJar.result == 'failure'
          buildDockerErrorCondition: steps.BuildDockerImage.result == 'error'
          buildDockerFailureCondition: steps.BuildDockerImage.result == 'failure'
          pushErrorCondition: steps.PushDockerImage.result == 'error'
          pushFailureCondition: steps.PushDockerImage.result == 'failure'